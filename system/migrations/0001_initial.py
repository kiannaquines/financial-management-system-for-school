# Generated by Django 5.1.1 on 2024-12-04 23:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('beneficiary_first_name', models.CharField(help_text='First name of the beneficiary', max_length=50)),
                ('beneficiary_middle_name', models.CharField(blank=True, help_text='Middle name of the beneficiary, optional.', max_length=50)),
                ('beneficiary_last_name', models.CharField(help_text='Last name of the beneficiary', max_length=50)),
                ('suffix', models.CharField(blank=True, help_text='Suffix of the beneficiary, optional', max_length=10, null=True)),
                ('relationship', models.CharField(choices=[('Mother', 'Mother'), ('Father', 'Father'), ('Child', 'Child'), ('Spouse', 'Spouse')], help_text='Relationship to the beneficiary', max_length=50)),
                ('date_of_birth', models.DateField(help_text='Date of Birth of the beneficiary')),
                ('proof', models.ImageField(help_text='Upload birth certificate of the beneficiary', upload_to='beneficiary/proof/')),
                ('used', models.BooleanField(default=False, help_text='Whether used as a beneficiary')),
            ],
            options={
                'verbose_name': 'Benefeciary',
                'verbose_name_plural': 'Beneficiaries',
                'db_table': 'benefeciary',
            },
        ),
        migrations.CreateModel(
            name='Dependents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependent_first_name', models.CharField(help_text='The first name of the dependent', max_length=50)),
                ('dependent_middle_name', models.CharField(blank=True, help_text='The middle name of the dependent', max_length=50, null=True)),
                ('dependent_last_name', models.CharField(help_text='The last name of the dependent', max_length=100)),
                ('suffix', models.CharField(blank=True, help_text='The suffix of the dependent', max_length=10, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], help_text='The gender of the dependent', max_length=10)),
                ('relationship_to_member', models.CharField(choices=[('Daughter', 'Daughter'), ('Son', 'Son'), ('Spouse', 'Spouse'), ('Father', 'Father'), ('Mother', 'Mother')], help_text='The relationship to the member', max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True, help_text='The date added to the relationship')),
            ],
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(choices=[('Claims', 'Claims'), ('District Activities', 'District Activities'), ('Visitors Fund', 'Visitors Fund')], max_length=255)),
                ('amount', models.FloatField(help_text='Amount of Expenses')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Expense',
                'verbose_name_plural': 'Expenses',
                'db_table': 'expenses',
            },
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_year', models.DateField(help_text='Start Year')),
                ('end_year', models.DateField(help_text='End Year')),
                ('primary_school_year', models.BooleanField(default=False, help_text='Toggle for primary school years')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('place_of_birth', models.CharField(help_text='Place of birth', max_length=50)),
                ('date_of_birth', models.DateField(help_text='Date of birth')),
                ('address', models.CharField(help_text='Address of the employee', max_length=100)),
                ('contact_number', models.CharField(help_text='Contact number of the employee', max_length=20)),
                ('employee_id', models.CharField(help_text='Employee ID of the employee', max_length=50)),
                ('position', models.CharField(choices=[('ISAL', 'ISAL'), ('ALIVE', 'ALIVE'), ('Teacher 1', 'Teacher 1'), ('Teacher 2', 'Teacher 2'), ('Teacher 3', 'Teacher 3'), ('MS Teacher 1', 'MS Teacher 1'), ('MS Teacher 2', 'MS Teacher 2'), ('MS Teacher 3', 'MS Teacher 3'), ('School Head', 'School Head')], help_text='Position of the employee', max_length=50)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], help_text='Gender of the employee', max_length=20)),
                ('school_affiliation', models.CharField(choices=[('Dapiawan CES', 'Dapiawan CES'), ('Datu Pendililang ES', 'Datu Pendililang ES'), ('Madia IS', 'Madia IS'), ('Elian ES', 'Elian ES'), ('Gawang ES', 'Gawang ES'), ('Kitango ES', 'Kitango ES'), ('Kitapok ES', 'Kitapok ES'), ('Datu Kogia ES', 'Datu Kogia ES'), ('Dimaukom Utto ES', 'Dimaukom Utto ES'), ('Dimaukom ES', 'Dimaukom ES')], help_text='School affiliation of the employee', max_length=100)),
                ('membership_status', models.BooleanField(default=False, help_text='Membership status of the employee')),
                ('beneficiary', models.OneToOneField(blank=True, help_text='Select beneficiary of the employee, select only one.', null=True, on_delete=django.db.models.deletion.CASCADE, to='system.beneficiary')),
                ('my_dependents', models.ManyToManyField(blank=True, help_text='Select dependent of the employee, select multiple.', to='system.dependents')),
                ('user_id', models.OneToOneField(help_text='Employee who want to be a member', limit_choices_to={'user_type': 'Employee'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership_school_year', to='system.schoolyear')),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Membership',
                'db_table': 'membership',
            },
        ),
        migrations.AddField(
            model_name='dependents',
            name='related_to_member',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system.membership'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='user_id',
            field=models.ForeignKey(help_text='Select related user to the beneficiary', on_delete=django.db.models.deletion.CASCADE, related_name='beneficiary_membership', to='system.membership'),
        ),
        migrations.CreateModel(
            name='Assistance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('suffix', models.CharField(blank=True, help_text='The suffix of the employee', max_length=10, null=True)),
                ('type_of_assistance', models.CharField(choices=[('Death', 'Death'), ('Hospitalization', 'Hospitalization')], help_text='Choose type of assistance', max_length=50)),
                ('assistance_status', models.BooleanField(default=False, help_text='Assistance status')),
                ('assistance_evidence_first', models.ImageField(blank=True, help_text='Upload medical certification', null=True, upload_to='assistance/proof/')),
                ('assistance_evidence_second', models.ImageField(blank=True, help_text='Upload hospital certificate', null=True, upload_to='assistance/proof/')),
                ('death_cert', models.ImageField(blank=True, help_text='Upload death certificate', null=True, upload_to='assistance/proof/')),
                ('released_status', models.BooleanField(default=False, help_text='Release status of the assistance')),
                ('amount_released', models.DecimalField(decimal_places=2, default=0.0, help_text='Amoutnt to be released by the assistance', max_digits=10)),
                ('date_released', models.DateTimeField(auto_now_add=True)),
                ('request_by', models.ForeignKey(help_text='The name of the member who requested the assistance', on_delete=django.db.models.deletion.CASCADE, to='system.membership')),
            ],
            options={
                'verbose_name': 'Assistance',
                'verbose_name_plural': 'Assistances',
                'db_table': 'assistance',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField(help_text='Amount employee paid')),
                ('payment_type', models.CharField(choices=[('Membership', 'Membership Fee'), ('Delegation Pay', 'Delegation Pay'), ('Trust Fund', 'Trust Fund'), ('Visitors Fund', 'Visitors Fund')], help_text='Payment type made by the employee', max_length=50)),
                ('date_paid', models.DateTimeField(auto_now_add=True)),
                ('paid_by', models.ForeignKey(help_text='Employee who paid', limit_choices_to={'user_id__user_type': 'Employee'}, on_delete=django.db.models.deletion.CASCADE, related_name='payment_name', to='system.membership')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.schoolyear')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField()),
                ('description', models.TextField(max_length=255)),
                ('amount', models.FloatField()),
                ('transaction_type', models.CharField(choices=[('Debit', 'Debit'), ('Credit', 'Credit')], max_length=255)),
                ('date_transaction', models.DateTimeField(auto_now_add=True)),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('school_year_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_year_transaction', to='system.schoolyear')),
            ],
        ),
    ]
